# 컴퓨터 개수
# 현수는 종합학원에 다니고 있습니다. 
# 현수가 다니는 종합학원은 서버 컴퓨터가 있는 큰 교실과 수학을 공부하는 작은 교실로 되어 있다. 
# 서버 컴퓨터가 있는 큰 교실의 모든 컴퓨터는 서버와 직간접적으로 연결되어 
# 인터넷이 되지만 수학교실에 있는 컴퓨터들은 서버와 연결되어 있지 않아 인터넷은 되지 않는다.
# 서버 컴퓨터는 1번 컴퓨터이다. 1, 2, 3, 4, 5, 6번 컴퓨터는 인터넷이 되지만 
# 7, 8, 9, 10, 11번 컴퓨터는 수학교실에 있는 컴퓨터들로 인터넷이 되지 않는다.
# 수학교실에 있는 컴퓨터들끼리는 서로 연결이 되어 있을 수도 있고,
# 연결이 되어 있지 않을수도 있다.
# 매개변수 n에 학원의 컴퓨터 총 개수가 주어지고, 
# 매개변수 edges에 컴퓨터간 연결정보가 주어지면 
# 현수가 다니는 학원의 수학교실에는 몇 대의 컴퓨터가 있는지 개수를 출력하는 프로그램을 작성하세요.

# 제한사항:
# • 3 <= n <= 20
# • 학원의 컴퓨터는 1번부터 n번까지의 번호로 구분한다.

cnt = 0

def DFS(v, n, graph, ch):
    global cnt
    ch[v] = 1
    cnt += 1

    for nv in graph[v]:
        if ch[nv] == 0:
            DFS(nv, n, graph, ch)

def solutions(n,edges):
    global cnt 
    ch = [0] * (n+1)
    
    graph = [[] for _ in range(n+1)]
    for [a,b] in edges:
        graph[a].append(b)
        graph[b].append(a)

    cnt = 0
    DFS(1, cnt, graph, ch)
    return n - cnt

print(solutions(11, [[1, 2], [1, 4], [2, 3], [4, 5], [5, 6], [7, 8], [7, 10],
[8, 9], [10, 11]]))
print(solutions(12, [[1, 2], [1, 7], [1, 8], [1, 6], [8, 11], [11, 12]] ))
print(solutions(14,[[1, 6], [1, 5], [6, 7], [7, 8], [9, 8], [3, 4], [4, 14]] ))
print(solutions(15,[[1, 4], [1, 5], [9, 5], [9, 6], [7, 9], [7, 14]]))

# 웅덩이
# 매개변수 nums에 n행 n열의 이차원 배열에 격자판 정보가 주어집니다.
# 각 격자에는 그 지역의 높이가 쓰여있습니다. 
# 각 지역은 상하좌우 인접한 지역의 숫자가 모두
# 자신보다 클 경우 이 지역을 웅덩이 지역이라고 합니다.
# 격자의 가장자리는 1000으로 초기화 되었다고 가정한다.
# 만약 5*5 이차원 배열의 격자판 정보다 아래와 같다면 
# 총 웅덩이의 수는 5개입니다.

# 주어진 격자에 웅덩이가 몇 개 있는지 찾아 
# 그 개수를 반환하는 프로그램을 작성하세요.

# 제한사항:
# • 3 <= n <= 10
# • 배열 nums의 원소는 자연수입니다. 1 <= nums[i][j] <= 100
def solutions(nums):
    dx = [-1, 0, 1, 0]
    dy = [0, 1, 0, -1]
    n = len(nums)
    answer = 0

    for i in range(n):
        for j in range(n):
            flag = True
            for k in range(4):
                nx = i + dx[k]
                ny = j + dy[k]
        
                if nx >=0 and nx < n and ny >= 0 and ny < n and nums[i][j] >= nums[nx][ny]:
                    flag = False
                    break

            if flag == True:
                answer + 1
    return answer


print(solutions([[10, 20, 50, 30, 20], [20, 30, 50, 70, 90], [10, 15, 25,
80, 35], [25, 35, 40, 55, 80], [30, 20, 35, 40, 90]]))
print(solutions([[80, 25, 10, 65, 100], [20, 10, 32, 70, 33], [45, 10, 88,
9, 90], [10, 35, 10, 55, 66], [10, 84, 65, 88, 99]]))
print(solutions([[33, 22, 55, 65, 55], [55, 88, 99, 12, 19], [18, 33, 25,
57, 77], [46, 78, 54, 55, 99], [33, 25, 47, 85, 17]]))

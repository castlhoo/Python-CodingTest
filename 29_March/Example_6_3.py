# 선긋기
# 한 번의 선긋기는 수직선상의 한 점에서 다른 한 점까지 선을 긋는 것입니다.
# 선을 그을 때는 이미 선이 있는 위치에 겹쳐서 그을 수도 있습니다.
# 여러번 그은 곳과 한 번 그은 곳의 차이는 없습니다.
# 수직선은 0번 지점부터 m번 지점까지의 길이를 갖고 있습니다.
# 매개변수 nums에 각각의 선긋기 정보가 주어지면 
# 0번 지점부터 m번 지점까지 연속적인 선이
# 그어지도록 하기 위한 선긋기 최소횟수를 반환하는 프로그램을 작성하세요.
# 모든 입력은 0번 지점부터 m번지점까지 연속적인 선이 그어집니다.

# 제한사항:
# • 3 <= m <= 10,000
# • nums의 길이는 100,000을 넘지 않습니다.
# • nums[i][0]은 i번째 선긋기의 시작 점, 
#     nums[i][1]은 i번째 선긋기의 끝점입니다.
# • 0 <= nums[i][0] < nums[i][1] <= 10,000

def solutions(m, nums):
    nums.sort(key = lambda x : x[0])
    answer = 0 
    n = len(nums)
    start = end = i = 0
    
    while i < n:
        while i < n and nums[i][0] <= start:
            end = max(end, nums[i][1])
            i += 1
        answer += 1
        if end == m:
            return answer
        start = end # end!=m 이라면 start를 end로 바꿔서 이어지도록 설정
        
    return answer

        
print(solutions(12, [[5, 10], [1, 8], [0, 2], [0, 3], [2, 5], [2, 6], [10,
12], [7, 12]]))
print(solutions(15, [[1, 10], [0, 8], [0, 7], [0, 10], [12, 5], [0, 12], [8,
15], [5, 14]]))
print(solutions(20, [[3, 7], [5, 8], [15, 20], [0, 5], [7, 14], [3, 10], [0,
8], [13, 18], [5, 9]]))
print(solutions(30, [[5, 7], [3, 9], [2, 7], [0, 1], [0, 2], [0, 3], [19, 30],
[8, 15], [7, 12], [13, 20]]))
print(solutions(25, [[10, 15], [15, 20], [5, 15], [3, 16], [0, 5], [0, 3],
[12, 25]]))